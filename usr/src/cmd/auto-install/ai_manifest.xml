<!--
CDDL HEADER START

The contents of this file are subject to the terms of the
Common Development and Distribution License (the "License").
You may not use this file except in compliance with the License.

You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
or http://www.opensolaris.org/os/licensing.
See the License for the specific language governing permissions
and limitations under the License.

When distributing Covered Code, include this CDDL HEADER in each
file and include the License file at usr/src/OPENSOLARIS.LICENSE.
If applicable, add the following below this CDDL HEADER, with the
fields enclosed by brackets "[]" replaced with your own identifying
information: Portions Copyright [yyyy] [name of copyright owner]

CDDL HEADER END

Copyright 2010 Sun Microsystems, Inc.  All rights reserved.
Use is subject to license terms.
-->

<!--
===============================================================================
RelaxNG sample manifest for Automatic Installer input manifest specification.
===============================================================================
-->
<ai_manifest name="sample_ai_manifest">
	<!--
	=======================================================================
	<ai_target_device> - selections for AI target Device specification

	Disk criteria are divided into two mutually exclusive groups:

	G1 - deterministic disk criteria
	................................
	  * iscsi_target_parameters
	  * target_device_name (c#t#d# name or 'boot_disk')
	  * target_device_select_volume_name
	  * target_device_select_id
	  * target_device_select_device_path

	G2 - rest of disk criteria
	..........................
	  * target_device_type
	  * target_device_vendor
	  * target_device_size

	Schema ai_manifest.rng enforces following policy:

	* criteria in group G1 are mutually exclusive - only
	  one can be specified at a time

	* groups G1 and G2 are mutually exclusive - i.e.
	  if criteria from G1 is specified, no criteria
	  from G2 are allowed and vice versa

	* multiple criteria from G2 can be specified
        =======================================================================
        -->
	<ai_target_device>
		<!-- G1 -->
               	<!--
		    c#t#d# device name like c0t0d0 or 
		    MPXIO name like c0t2000002037CD9F72d0
		    or 'boot_disk' keyword to select boot disk
		-->
		<target_device_name>
			boot_disk
		</target_device_name>

               	<!-- volume name set for instance by means
		    of format(1M) command
		-->
		<!--
		    <target_device_select_volume_name>
			ai-disk
		    </target_device_select_volume_name>
		-->

               	<!-- device id - e.g. can be obtained by means of
		    iostat(1M) -iEn
		-->
		<!--
		    <target_device_select_id>
			id1,cmdk@AST31000340NS=____________9QJ2LNYY
		    </target_device_select_id>
		-->

               	<!-- device path under /devices directory, e.g.
		    /pci@1e,600000/pci@0/pci@9/pci@0/scsi@1/sd@0,0
		-->
		<!--
		    <target_device_select_device_path>
			/pci@0/pci@9/pci@0/scsi@1/sd@0,0
		    </target_device_select_device_path>
		-->

		<!-- G2 -->
		<!--
		    <target_device_type>SCSI</target_device_type>
		    <target_device_vendor>hitachi</target_device_vendor>
		    <target_device_size>20480</target_device_size>
		-->

		<!--
		    Uncomment this to force AI to find an existing Solaris
		    partition instead of creating a new one.
		-->
		<!--
		    <target_device_use_solaris_partition>true</target_device_use_solaris_partition>
		-->

		<target_device_install_slice_number>0</target_device_install_slice_number>
	</ai_target_device>
	<ai_device_partitioning>
		<partition_action>create</partition_action>
		<partition_number>1</partition_number>
		<partition_start_sector>200</partition_start_sector>
		<partition_size>20480</partition_size>
		<partition_type>99</partition_type>
	</ai_device_partitioning>
	<ai_device_partitioning>
		<partition_action>create</partition_action>
		<partition_number>4</partition_number>
		<partition_start_sector>200</partition_start_sector>
		<partition_size>20480</partition_size>
		<partition_size_units>mb</partition_size_units>
		<partition_type>99</partition_type>
	</ai_device_partitioning>
	<ai_device_vtoc_slices>
		<slice_action>create</slice_action>
		<slice_number>4</slice_number>
		<slice_size>20480</slice_size>
		<slice_size_units>mb</slice_size_units>
	</ai_device_vtoc_slices>
	<ai_device_vtoc_slices>
		<slice_action>delete</slice_action>
		<slice_number>4</slice_number>
		<slice_size>20480</slice_size>
	</ai_device_vtoc_slices>
	<ai_pkg_repo_default_publisher>
		<main url="http://pkg.opensolaris.org/release" publisher="opensolaris.org"/>
		<mirror url=""/>
	</ai_pkg_repo_default_publisher>

	<!--
	    By default the latest build available, in the
	    specified IPS repository, is installed.
	    If another build is required, the build number has
	    to be appended to the 'entire' package in following
	    form:

	    <pkg_name="entire@0.5.11-0.build#/>
	-->
	<ai_install_packages>
		<pkg name="entire"/>
		<pkg name="SUNWcsd"/>
		<pkg name="SUNWcs"/>
		<pkg name="babel_install"/>
	</ai_install_packages>
	<ai_uninstall_packages>
		    <pkg name="babel_install"/>
		    <pkg name="slim_install"/>
	</ai_uninstall_packages>
	<ai_auto_reboot>
		false
	</ai_auto_reboot>
</ai_manifest>
