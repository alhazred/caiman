#!/usr/bin/python
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright (c) 2012, Oracle and/or its affiliates. All rights reserved.
#

""" constants and enums from ima.h
"""

IMA_OBJECT_TYPE = (
    IMA_OBJECT_TYPE_UNKNOWN,
    IMA_OBJECT_TYPE_PLUGIN,
    IMA_OBJECT_TYPE_NODE,
    IMA_OBJECT_TYPE_LHBA,
    IMA_OBJECT_TYPE_PHBA,
    IMA_OBJECT_TYPE_NETWORK_PORTAL,
    IMA_OBJECT_TYPE_PORTAL_GROUP,
    IMA_OBJECT_TYPE_LNP,
    IMA_OBJECT_TYPE_PNP,
    IMA_OBJECT_TYPE_TARGET,
    IMA_OBJECT_TYPE_LU,
    IMA_OBJECT_TYPE_DISCOVERY_ADDRESS,
    IMA_OBJECT_TYPE_STATIC_DISCOVERY_TARGET,
    IMA_OBJECT_TYPE_CONNECTION,
    IMA_OBJECT_TYPE_SESSION
) = xrange(15)

IMA_OBJECT_TYPE_MAP = {
    IMA_OBJECT_TYPE_UNKNOWN: "IMA_OBJECT_TYPE_UNKNOWN",
    IMA_OBJECT_TYPE_PLUGIN: "IMA_OBJECT_TYPE_PLUGIN",
    IMA_OBJECT_TYPE_NODE: "IMA_OBJECT_TYPE_NODE",
    IMA_OBJECT_TYPE_LHBA: "IMA_OBJECT_TYPE_LHBA",
    IMA_OBJECT_TYPE_PHBA: "IMA_OBJECT_TYPE_PHBA",
    IMA_OBJECT_TYPE_NETWORK_PORTAL: "IMA_OBJECT_TYPE_NETWORK_PORTAL",
    IMA_OBJECT_TYPE_PORTAL_GROUP: "IMA_OBJECT_TYPE_PORTAL_GROUP",
    IMA_OBJECT_TYPE_LNP: "IMA_OBJECT_TYPE_LNP",
    IMA_OBJECT_TYPE_PNP: "IMA_OBJECT_TYPE_PNP",
    IMA_OBJECT_TYPE_TARGET: "IMA_OBJECT_TYPE_TARGET",
    IMA_OBJECT_TYPE_LU: "IMA_OBJECT_TYPE_LU",
    IMA_OBJECT_TYPE_DISCOVERY_ADDRESS: "IMA_OBJECT_TYPE_DISCOVERY_ADDRESS",
    IMA_OBJECT_TYPE_STATIC_DISCOVERY_TARGET: \
        "IMA_OBJECT_TYPE_STATIC_DISCOVERY_TARGET",
    IMA_OBJECT_TYPE_CONNECTION: "IMA_OBJECT_TYPE_CONNECTION",
    IMA_OBJECT_TYPE_SESSION: "IMA_OBJECT_TYPE_SESSION",
    "IMA_OBJECT_TYPE_UNKNOWN": IMA_OBJECT_TYPE_UNKNOWN,
    "IMA_OBJECT_TYPE_PLUGIN": IMA_OBJECT_TYPE_PLUGIN,
    "IMA_OBJECT_TYPE_NODE": IMA_OBJECT_TYPE_NODE,
    "IMA_OBJECT_TYPE_LHBA": IMA_OBJECT_TYPE_LHBA,
    "IMA_OBJECT_TYPE_PHBA": IMA_OBJECT_TYPE_PHBA,
    "IMA_OBJECT_TYPE_NETWORK_PORTAL": IMA_OBJECT_TYPE_NETWORK_PORTAL,
    "IMA_OBJECT_TYPE_PORTAL_GROUP": IMA_OBJECT_TYPE_PORTAL_GROUP,
    "IMA_OBJECT_TYPE_LNP": IMA_OBJECT_TYPE_LNP,
    "IMA_OBJECT_TYPE_PNP": IMA_OBJECT_TYPE_PNP,
    "IMA_OBJECT_TYPE_TARGET": IMA_OBJECT_TYPE_TARGET,
    "IMA_OBJECT_TYPE_LU": IMA_OBJECT_TYPE_LU,
    "IMA_OBJECT_TYPE_DISCOVERY_ADDRESS": IMA_OBJECT_TYPE_DISCOVERY_ADDRESS,
    "IMA_OBJECT_TYPE_STATIC_DISCOVERY_TARGET": \
        IMA_OBJECT_TYPE_STATIC_DISCOVERY_TARGET,
    "IMA_OBJECT_TYPE_CONNECTION": IMA_OBJECT_TYPE_CONNECTION,
    "IMA_OBJECT_TYPE_SESSION": IMA_OBJECT_TYPE_SESSION
}

IMA_AUTHMETHOD = (
    IMA_AUTHMETHOD_NONE,
    IMA_AUTHMETHOD_CHAP,
    IMA_AUTHMETHOD_SRP,
    IMA_AUTHMETHOD_KRB5,
    IMA_AUTHMETHOD_SPKM1,
    IMA_AUTHMETHOD_SPKM2
) = xrange(6)

IMA_AUTHMETHOD_MAP = {
    IMA_AUTHMETHOD_NONE: "IMA_AUTHMETHOD_NONE",
    IMA_AUTHMETHOD_CHAP: "IMA_AUTHMETHOD_CHAP",
    IMA_AUTHMETHOD_SRP: "IMA_AUTHMETHOD_SRP",
    IMA_AUTHMETHOD_KRB5: "IMA_AUTHMETHOD_KRB5",
    IMA_AUTHMETHOD_SPKM1: "IMA_AUTHMETHOD_SPKM1",
    IMA_AUTHMETHOD_SPKM2: "IMA_AUTHMETHOD_SPKM2",
    "IMA_AUTHMETHOD_NONE": IMA_AUTHMETHOD_NONE,
    "IMA_AUTHMETHOD_CHAP": IMA_AUTHMETHOD_CHAP,
    "IMA_AUTHMETHOD_SRP": IMA_AUTHMETHOD_SRP,
    "IMA_AUTHMETHOD_KRB5": IMA_AUTHMETHOD_KRB5,
    "IMA_AUTHMETHOD_SPKM1": IMA_AUTHMETHOD_SPKM1,
    "IMA_AUTHMETHOD_SPKM2": IMA_AUTHMETHOD_SPKM2
}

ISCSI_MAX_NAME_LEN = 224
ISCSI_MAX_C_USER_LEN = 512
ISCSI_IOCTL = ((ord('i') << 24) | (ord('S') << 16) | (ord('C') << 8))
ISCSI_BOOTPROP_GET = ISCSI_IOCTL | 48
